---

- name: Generate an OpenSSL private key.
  openssl_privatekey:
    path: tower.key
  delegate_to: localhost

- name: Generate an OpenSSL CSR.
  openssl_csr:
    path: tower.csr
    privatekey_path: tower.key
    common_name: "{{ tower_manage_fqdn }}"
  delegate_to: localhost

- name: Generate a Let's Encrypt Certificate
  acme_certificate:
    account_key_src: /etc/tower/tower.key
    csr: /etc/tower/tower.csr
    dest: /etc/tower/tower.cert
    acme_directory: https://acme-v02.api.letsencrypt.org/directory
    acme_version: 2
    terms_agreed: true
  register: acme_cert
  notify: "restart nginx"

- name: Create certificates for challenges
  acme_challenge_cert_helper:
    challenge: tls-alpn-01
    challenge_data: "{{ acme_cert.challenge_data[tower_manage_fqdn]['tls-alpn-01'] }}"
    private_key_src: /etc/tower/tower.key
  register: acme_cert_challenge

- name: Install challenge certificates
  ...:
    domain: "{{ item.domain }}"
    challenge_certificate: "{{ item.challenge_certificate }}"
    regular_certificate: "{{ item.regular_certificate }}"
    private_key: /etc/tower/tower.key
  loop: "{{ acme_cert_challenge.results }}"

- name: Verify a Let's Encrypt Certificate
  acme_certificate:
    account_key_src: /etc/tower/tower.key
    csr: /etc/tower/tower.csr
    dest: /etc/tower/tower.cert
    acme_directory: https://acme-v02.api.letsencrypt.org/directory
    acme_version: 2
    terms_agreed: true
    data: "{{ acme_cert }}"